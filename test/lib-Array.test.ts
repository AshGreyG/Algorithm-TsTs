///////////////////////////////////////////////////////////////////
//                                                               //
// This Array test file is auto-generated by "script/lib-gen.sh" //
//                                                               //
///////////////////////////////////////////////////////////////////

import Array from "../lib/Array";
import { Equal, Expect } from "../utils";

type CaseLibArray = [
  // Array.Concat
  Expect<Equal<Array.Concat<[1,2,3], [2,3,1]>, [1,2,3,2,3,1]>>,

  // Array.CreateArrayFromLength
  Expect<Equal<Array.CreateArrayFromLength<2>, [undefined,undefined]>>,
  Expect<Equal<Array.CreateArrayFromLength<3, string>, [string,string,string]>>,
  Expect<Equal<Array.CreateArrayFromLength<0>, []>>,
  Expect<Equal<Array.CreateArrayFromLength<-1>, []>>,

  // Array.Flat
  Expect<Equal<Array.Flat<[1,2,3]>, [1,2,3]>>,
  Expect<Equal<Array.Flat<[1,2,3,[]]>, [1,2,3]>>,
  Expect<Equal<Array.Flat<[1,2,[3]]>, [1,2,3]>>,
  Expect<Equal<Array.Flat<[1,2,[3,[0]]]>, [1,2,3,0]>>,
  Expect<Equal<Array.Flat<[]>, []>>,
  Expect<Equal<Array.Flat<[[]]>, []>>,
  Expect<Equal<Array.Flat<[[[1]]]>, [1]>>,

  // Array.Includes
  Expect<Equal<Array.Includes<[1,2,3], 1>, true>>,
  Expect<Equal<Array.Includes<[1,2,3], -1>, false>>,
  Expect<Equal<Array.Includes<[], "">, false>>,
  Expect<Equal<Array.Includes<[""], "">, true>>,
  Expect<Equal<Array.Includes<[[]], []>, true>>,
  Expect<Equal<Array.Includes<[[1]], 1>, false>>,

  // Array.IndexOf
  Expect<Equal<Array.IndexOf<[1,2,3], 1>, 0>>,
  Expect<Equal<Array.IndexOf<[1,[2],3], [2]>, 1>>,
  Expect<Equal<Array.IndexOf<[], 0>, -1>>,
  Expect<Equal<Array.IndexOf<[1,2,3], 4>, -1>>,
  Expect<Equal<Array.IndexOf<[1,2,1], 1>, 0>>,

  // Array.IsFlatten
  Expect<Equal<Array.IsFlatten<[1,2,3]>, true>>,
  Expect<Equal<Array.IsFlatten<[]>, true>>,
  Expect<Equal<Array.IsFlatten<[[]]>, false>>,
  Expect<Equal<Array.IsFlatten<[1,[2],3]>, false>>,
  Expect<Equal<Array.IsFlatten<[[],1,2]>, false>>,
  Expect<Equal<Array.IsFlatten<[1,[1,2,[]],undefined]>, false>>,

  // Array.Fill
  Expect<Equal<Array.Fill<[1,2,3], "3">, ["3","3","3"]>>,
  Expect<Equal<Array.Fill<[0,9,1], "1", 1, 2>, [0,"1",1]>>,
  Expect<Equal<Array.Fill<["head",9,1], true, 1>, ["head",true,true]>>,
  Expect<Equal<Array.Fill<[1,2,3], "3", 2, 1>, [1,2,3]>>,
  Expect<Equal<Array.Fill<[1,2,3], "3", -4, 2>, ["3","3",3]>>,
  Expect<Equal<Array.Fill<[1,2,3], "3", -2, 3>, [1,"3","3"]>>,
  Expect<Equal<Array.Fill<[1,2,3], "3", 7, 2>, [1,2,3]>>,
  Expect<Equal<Array.Fill<[1,2,3], "3", 1, -1>, [1,"3",3]>>,

  // Array.At
  Expect<Equal<Array.At<[1,2,3], 2>, 3>>,
  Expect<Equal<Array.At<[1,2,3,4], 0>, 1>>,
  Expect<Equal<Array.At<[], 1>, never>>,
  Expect<Equal<Array.At<[], -1>, never>>,
  Expect<Equal<Array.At<[], 0>, never>>,

]
